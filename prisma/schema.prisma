// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Taches {
  id          Int      @id @default(autoincrement())
  titre       String
  description String
  status      Etat     @default(A_FAIRE)
  userId      Int
  assignedTo  Int?
  imageUrl    String?
  audioUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  startedAt   DateTime?
  completedAt DateTime?
  user        User     @relation(fields: [userId], references: [id])
  assignedUser User?   @relation("AssignedTasks", fields: [assignedTo], references: [id])
  notifications Notification[]
}

enum Etat {
  EN_COURS
  TERMINER
  A_FAIRE
}

model User {
  id             Int             @id @default(autoincrement())
  nom            String
  email          String          @unique
  password       String
  taches         Taches[]
  assignedTasks  Taches[]        @relation("AssignedTasks")
  notifications  Notification[]
}

model Notification {
  id        Int                    @id @default(autoincrement())
  message   String
  type      NotificationType
  read      Boolean                @default(false)
  userId    Int
  taskId    Int?
  createdAt DateTime               @default(now())
  user      User                   @relation(fields: [userId], references: [id])
  task      Taches?                @relation(fields: [taskId], references: [id])

  @@index([userId])
  @@index([read])
  @@index([createdAt])
}

enum NotificationType {
  TASK_COMPLETED
  TASK_MODIFIED
  TASK_DELETED
  TASK_ASSIGNED
}
